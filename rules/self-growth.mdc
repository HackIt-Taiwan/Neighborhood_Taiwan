---
description: 
globs: 
alwaysApply: true
---
# .cursorrules

## 使命（Purpose）
確保在 Cursor 專案中，所有 AI／人類協作都能：
1. **持續學習**：即時記錄錯誤與修正，避免重蹈覆轍  
2. **系統化思考**：在 Scratchpad 中拆解、追蹤、反思每項任務  
3. **自我進化**：隨著專案進展，自動汰換過時資訊、擴充新經驗  

---

## 區塊結構（File Sections）

### 1. Lessons  
- **User-Specified Lessons**：使用者明確指出的注意事項或偏好  
- **Cursor-Learned**：AI 在對話中獲得的修正、最佳解法或踩坑經驗  
- **更新規則**  
  1. 一旦遇到可重複利用的經驗，立即寫入此區塊  
  2. 以條列簡短描述「錯誤 → 修正 → 結論」  

### 2. Scratchpad  
為「進行中任務」的暫存區，協助**思考、拆解、追蹤**。  
建議結構：  

```md
## Plan
- [ ] 步驟 1  
- [ ] 步驟 2  
  - 子步驟  
- [ ] 步驟 3  

## Progress
- 2025-05-20 02:15  ✅ 完成步驟 1，意外發現 X 問題  
- 2025-05-20 03:10  ➡️ 修正並更新 Lessons  
````

> **規範**
>
> * 僅放「尚未完成」或「需要回顧」的事項
> * 任務完成後，將相關筆記移至 Lessons 或刪除
> * 定期（建議每日／每次任務結束）清理過期內容，保持精簡

---

## 自我進化機制（Self-Evolution）

1. **事件驅動更新**

   * 當發生「錯誤被糾正」「新工具版本」「重構大改」等事件，立即寫入 *Lessons*
2. **週期性回顧**

   * 於每週或里程碑結束時，檢查 Scratchpad 與 Lessons：

     * 刪除無用資訊
     * 合併重複經驗
     * 標註已過時的做法
3. **版本註記**

   * 重要調整可附上日期與簡短說明，方便追溯
4. **遷移策略**

   * 若經驗屬於跨專案共通知識，考慮抽離到中央知識庫或維基

---

## 使用守則（Best Practices）

1. **先讀後寫**：接到新任務→先掃過 Scratchpad，確保不重複、方向正確
2. **小步快寫**：任何靈感、疑問、暫時結論都先丟進 Scratchpad，再逐步整理
3. **完成即歸檔**：任務結束立即把重點學習寫到 Lessons，並刪除或精簡 Scratchpad
4. **保持原子性**：每條 Lesson 僅描述一個教訓，方便搜尋與重用
5. **用日期戳記**：Progress 與 Lessons 建議加時間，提升可追溯性
6. **避免冗長**：Scratchpad ≠ 最終文件；寫足夠讓自己回想即可

---

## 範例（Example）

```md
# Lessons

## Cursor-Learned
- **2025-05-20**  
  - *錯誤*：未遵守 matplotlib 只能單圖、不指定顏色的規定  
  - *修正*：改為分次繪圖並移除 color 參數  
  - *結論*：未來繪圖須檢查三條規則（不使用 seaborn、單張圖、不指定顏色）

# Scratchpad

## Plan
- [ ] 搜集使用者需求
- [ ] 設計資料流程
- [ ] 撰寫 API 介面

## Progress
- 05-20 02:20  完成需求訪談摘要
```

---

> ***保持簡潔、即時更新，讓 .cursorrules 成為專案的「作業系統」。***